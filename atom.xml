<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>房东家的鳄鱼</title>
  
  <subtitle>记录生活，积极向上</subtitle>
  <link href="https://zggnice.github.io/atom.xml" rel="self"/>
  
  <link href="https://zggnice.github.io/"/>
  <updated>2024-09-23T01:55:27.533Z</updated>
  <id>https://zggnice.github.io/</id>
  
  <author>
    <name>房东家的鳄鱼</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://zggnice.github.io/posts/undefined.html"/>
    <id>https://zggnice.github.io/posts/undefined.html</id>
    <published>2024-09-23T01:55:27.532Z</published>
    <updated>2024-09-23T01:55:27.533Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java面向对象"><a href="#Java面向对象" class="headerlink" title="Java面向对象"></a>Java面向对象</h1><p><img src="D:\思维导图\微信图片_20240923095137.png"></p><h2 id="面向对象基础"><a href="#面向对象基础" class="headerlink" title="面向对象基础"></a>面向对象基础</h2><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><ul><li><p>类的定义(对象的抽象)</p><p>具有相同特征的事物的抽象描述</p></li><li><p>类的实例化(对象)</p><p>定义:实际存在的该类事物的每个个体，是具体的。<br>创建对象（在main方法中）格式:</p><ul><li><p>匿名对象</p><p>如果一个对象只进行一次方法调用，就可以用匿名对象。<br>例:new Person().shout() 定义了一个Person类的匿名对象并调用了shout方法。</p></li><li><p>对象的内存解析</p><p>凡是new出来的结构(对象,数组)都放在堆空间中。</p></li><li><p>对象数组</p><p>当数组元素是引用类型中的类的实例化时，我们称为对象数组。<br>类名 []数组名 &#x3D;new 类名[n]；<br>后通过循环遍历为数组元素初始化，例:数组名[i]&#x3D;new 类名（）;</p></li></ul></li><li><p>类的成员概述</p><ul><li><p>属性（成员变量）</p><p>此时说的是实例变量（不以static修饰）</p><ul><li><p>声明格式</p><p>数据类型 变量名 ＝ 初始化值</p></li><li><p>成员变量与局部变量比较</p><ul><li><p>成员变量</p><p>声明在方法体外，类体内</p></li><li><p>局部变量</p><p>声明在方法体内部等位置</p></li></ul></li><li><p>分类</p><ul><li><p>实例变量</p><p>随着对象的创建而加载。每个对象拥有一份实例变量。<br>只有对象能调用</p></li><li><p>静态变量</p></li></ul></li></ul></li><li><p>行为（（成员）方法&#x2F;函数）</p><p>无返回值，则声明:void<br>有返回值，则声明出返回值类型，与方法体中”return”返回值搭配使用</p><ul><li><p>return关键字的使用</p><p>作用1:结束一个方法(通过条件判断语句结束方法)<br>作用2:结束一个方法的同时，可以返回数据给方法的调用者<br>注:在return关键字的直接后面不能声明执行语句</p></li><li><p>方法的重载</p><p>同一个类中，方法名相同，但参数个数&#x2F;参数类型不同，与修饰符，返回值类型无关。</p></li><li><p>可变个数的形参</p><p>格式:方法名（参数的类型名 …参数名）<br>相当于在方法中传入了一个数组，在调用该方法时，传入数组的元素，就相当于传入多个参数</p></li><li><p>方法的参数传递机制</p><ul><li><p>形参和实参</p><ul><li><p>形参</p><p>定义方法时（）中的参数</p></li><li><p>实参</p><p>调用方法时写入（）的参数</p></li></ul></li><li><p>值传递</p><ul><li><p>数据值（基本数据类型）</p></li><li><p>地址值（引用数据类型）</p></li></ul></li></ul></li></ul></li><li><p>构造器</p><p>一般用快捷键创建</p><ul><li><p>构造器的作用</p><p>1搭配new关键字，创建类的对象<br>2在创建对象时，为实例变量赋值<br>类默认有一个空参构造器<br>例:Person p&#x3D;new Person(3,”zgg”)<br>3可以声明多个构造器</p></li></ul></li><li><p>代码块</p></li></ul></li><li><p>面向对象完成功能的三步骤</p><ul><li><p>1类的定义（class关键字）</p></li><li><p>2对象的创建</p><p>单独在一个新类的main中创建<br>格式:类名 对象名 &#x3D; new 类名（）;<br>例:Person  p &#x3D; new Person,创建了类Person的一个名为p的对象</p></li><li><p>3对象调用属性或方法</p><p>格式<br>对象名.属性&#x2F;对象名.方法名</p></li></ul></li></ul><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><ul><li><p>package（包）</p></li><li><p>import（导入）</p></li></ul><h3 id="面向对象特征一-封装性"><a href="#面向对象特征一-封装性" class="headerlink" title="面向对象特征一:封装性"></a>面向对象特征一:封装性</h3><p>把该隐藏的隐藏起来，该暴露的暴露出来</p><ul><li><p>封装性的体现</p><ul><li><p>成员变量&#x2F;属性私有化</p><p>设置为private,提供get和set方法(可以使用快捷键创建)</p></li><li><p>私有化方法</p><p>方法声明为private</p></li></ul></li><li><p>四种权限修饰符</p><p>private， 缺省（默认），protected,public</p></li></ul><h3 id="阶段性知识补充"><a href="#阶段性知识补充" class="headerlink" title="阶段性知识补充"></a>阶段性知识补充</h3><ul><li><p>类中属性赋值过程</p></li><li><p>JavaBean</p><p>符合如下标准的Java类<br>类是公共的<br>有一个无参的构造器<br>有属性，且有对应的get,set方法</p></li><li><p>UML 类图</p><p>+:public<br>-:private<br>#:protected</p></li></ul><h2 id="面向对象进阶"><a href="#面向对象进阶" class="headerlink" title="面向对象进阶"></a>面向对象进阶</h2><h3 id="关键字-1"><a href="#关键字-1" class="headerlink" title="关键字"></a>关键字</h3><ul><li><p>this</p><ul><li><p>定义</p><p>表示为:<br>当前正在初始化的对象(在构造器中)<br>当前调用该方法的对象（在方法中调用）</p></li><li><p>使用</p><ul><li><p>区分同名的成员变量和局部变量</p></li><li><p>同一个类中构造器互相调用</p><p>this():调用本类的无参构造器<br>this(实参列表):调用本类的有参构造器<br>都只能声明在构造器首行，因此二者不可兼得</p></li></ul></li></ul></li><li><p>super</p><ul><li><p>作用</p><p>避开子父类中同名的成员变量<br>引用父类声明的成员</p></li><li><p>使用</p><ul><li><p>子类中调用父类被重写的方法</p></li><li><p>子类中调用父类中同名的成员变量</p></li><li><p>子类构造器中调用父类构造器</p><p>super(形参列表)<br>子类默认调用父类空参的super()<br>必须声明在构造器的首行，与this二者不可兼得</p></li></ul></li></ul></li><li><p>instanceof</p><p>搭配if判断语句</p></li></ul><h3 id="面向对象特征二-继承（extend）"><a href="#面向对象特征二-继承（extend）" class="headerlink" title="面向对象特征二:继承（extend）"></a>面向对象特征二:继承（extend）</h3><p>子类会继承父类中所有的实例变量和实例方法<br>子类不能直接访问父类中的私有的（private）成员变量和方法<br>单继承<br>子类可以有自己独特的内容<br>属性不具有重写</p><h3 id="方法的重写"><a href="#方法的重写" class="headerlink" title="方法的重写"></a>方法的重写</h3><p>子类的重写的方法必须和父类被重写的方法具有相同的方法名称，参数列表。</p><h3 id="子类对象实例化全过程"><a href="#子类对象实例化全过程" class="headerlink" title="子类对象实例化全过程"></a>子类对象实例化全过程</h3><p>new→造对象<br>构造器→初始化</p><h3 id="面向对象特征三-多态性"><a href="#面向对象特征三-多态性" class="headerlink" title="面向对象特征三:多态性"></a>面向对象特征三:多态性</h3><p>父类的引用指向子类的对象<br>格式:父类类型 变量名&#x3D;子类对象<br>适用性:适用于方法，不适用于属性<br>编译看左，运行看右</p><ul><li><p>类型转换</p><ul><li><p>向上转型（多态）</p><p>左父右子</p></li><li><p>向下转型</p><p>左子右父</p></li></ul></li></ul><h3 id="Object类的使用（根父类）"><a href="#Object类的使用（根父类）" class="headerlink" title="Object类的使用（根父类）"></a>Object类的使用（根父类）</h3><p>Object类是所有类的父类</p><ul><li><p>方法</p><ul><li><p>equals()</p><p>所有类都可以重写<br>只能比较引用类型<br>判断是否相等<br>格式:obj1.equals(obj2)</p><ul><li>equals()与”＝”的区别</li></ul></li><li><p>toString()</p><p>返回对象的相关属性，搭配输出语句进行打印</p></li><li><p>clone()</p><p>复制的相当与创建一个新的空间</p></li><li><p>finalize()</p><p>当对象被回收，系统自动调用该对象的finalize()方法</p></li><li><p>getClass</p><p>获取对象运行时类型</p></li><li><p>hashCode()</p><p>返回每个对象的hash值</p></li></ul></li><li><p>native关键字</p></li></ul><h2 id="面向对象高级"><a href="#面向对象高级" class="headerlink" title="面向对象高级"></a>面向对象高级</h2><h3 id="关键字-2"><a href="#关键字-2" class="headerlink" title="关键字"></a>关键字</h3><ul><li><p>static</p><ul><li><p>静态变量（类变量）</p><p>随着类的加载而加载，由于类只加载一次，所以静态变量只有一份。<br>类和对象都可以调用<br>调用方法:类名.变量名</p></li><li><p>静态方法（类方法）</p><p>可以被继承，不能被重写。<br>调用方法:类名.方法名</p></li><li><p>特点</p><p>随着类的加载而加载<br>优先于对象存在<br>修饰的成员，被所有对象所共享<br>访问权限允许时，可以不创建对象，直接被类调用</p></li></ul></li><li><p>final</p><ul><li><p>使用</p><ul><li><p>final修饰类</p><p>这个类不能被继承，没有子类</p></li><li><p>final修饰方法</p><p>这个方法不能被子类重写</p></li><li><p>final修饰变量</p><p>一旦赋值，值就不能被修改，即常量</p></li></ul></li></ul></li><li><p>abstract</p><ul><li><p>抽象类</p><p>包含抽象方法的类一定是抽象类<br>不能实例化，但能被继承<br>子类必须重写父类中的所有方法，否则子类仍为抽象类</p></li><li><p>抽象方法</p><p>没有方法体，适用于不知道具体内容，由子类重写。<br>不能被调用</p></li></ul></li><li><p>interface</p><ul><li><p>接口</p><p>接口就是规范，定义的是一组规则<br>属性:必须使用public  static final<br>方法:声明抽象方法，修饰为public abstract</p><ul><li><p>使用规则</p><ul><li><p>类实现接口</p></li><li><p>接口的多实现</p></li><li><p>接口的多继承</p></li><li><p>接口与实现类对象构成多态引用</p></li><li><p>使用接口的静态成员</p></li><li><p>使用接口的非静态方法</p></li></ul></li></ul></li></ul></li></ul><h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><p>对某个类只能存在一个对象实例时</p><ul><li><p>饿汉式</p><p>立即加载</p></li><li><p>懒汉式</p><p>延迟加载<br>存在线程不安全问题</p></li><li><p>创建步骤</p><p>私有化构造器<br>内部提供一个当前类的实例<br> 4.此实例也必须静态化<br> 3.提供公共的静态的方法，返回当前类的对象</p></li></ul><h3 id="理解main方法的语法"><a href="#理解main方法的语法" class="headerlink" title="理解main方法的语法"></a>理解main方法的语法</h3><p>看做是一个普通的静态方法。<br>看做是程序的入口，格式是固定的。</p><h3 id="类的成员之四-代码块"><a href="#类的成员之四-代码块" class="headerlink" title="类的成员之四:代码块"></a>类的成员之四:代码块</h3><ul><li><p>静态代码块</p><p>被static修饰<br>加载类的时候，直接执行，不用调用</p></li><li><p>非静态代码块</p><p>没有被static<br>与对象有关，对象创建后，不用调用直接执行，创建几个对象，执行几次</p></li></ul><h3 id="实例变量赋值顺序"><a href="#实例变量赋值顺序" class="headerlink" title="实例变量赋值顺序"></a>实例变量赋值顺序</h3><h3 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h3><ul><li><p>成员内部类</p><p>直接声明在外部类的里面</p><ul><li><p>静态成员内部类</p><p>使用static修饰</p></li><li><p>非静态成员内部类</p></li></ul></li><li><p>局部内部类</p><p>声明在方法内，构造器内，代码块内</p><ul><li><p>非匿名局部内部类</p></li><li><p>匿名局部内部类</p></li></ul></li></ul><h3 id="枚举类-enum"><a href="#枚举类-enum" class="headerlink" title="枚举类(enum)"></a>枚举类(enum)</h3><p>必须在枚举类的开头声明多个对象，对象之间使用“，”隔开</p><h3 id="注解-Annotation"><a href="#注解-Annotation" class="headerlink" title="注解(Annotation)"></a>注解(Annotation)</h3><ul><li><p>与注释的区别</p></li><li><p>元注释</p><p>对现有的注解进行解释说明的注解</p></li><li><p>自定义注释</p></li><li><p>测试</p><ul><li><p>黑盒测试</p></li><li><p>白盒测试</p><ul><li>JUnit单元测试</li></ul></li></ul></li></ul><h3 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h3><p>为了使得基本数据类型的变量具备引用数据类型变量的相关特征（eg:封装性，继承性，多态性）</p><ul><li><p>包装类与基本数据类型间的转换</p><ul><li><p>装箱</p><p>基本数值→包装对象</p></li><li><p>拆箱</p><p>包装对象→基本数值</p></li></ul></li><li><p>基本数据类型、包装类与字符串间的转换</p><ul><li><p>基本数据类型转为字符串</p></li><li><p>字符串转为基本数据类型</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java面向对象&quot;&gt;&lt;a href=&quot;#Java面向对象&quot; class=&quot;headerlink&quot; title=&quot;Java面向对象&quot;&gt;&lt;/a&gt;Java面向对象&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;D:&#92;思维导图&#92;微信图片_20240923095137.png&quot;&gt;&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://zggnice.github.io/posts/undefined.html"/>
    <id>https://zggnice.github.io/posts/undefined.html</id>
    <published>2024-08-21T09:33:54.380Z</published>
    <updated>2024-08-21T11:38:26.776Z</updated>
    
    <content type="html"><![CDATA[<p>大千世界，无奇不有。我陈平安，唯有一剑，可搬山，倒海，降妖，镇魔，敕神，摘星，断江，摧城， 开天！</p><p>陈平安，记住，以后不管遇到什么，都不要对这个世界shiqu</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;大千世界，无奇不有。我陈平安，唯有一剑，可搬山，倒海，降妖，镇魔，敕神，摘星，断江，摧城， 开天！&lt;/p&gt;
&lt;p&gt;陈平安，记住，以后不管遇到什么，都不要对这个世界shiqu&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>斗破</title>
    <link href="https://zggnice.github.io/posts/c1a85fc8.html"/>
    <id>https://zggnice.github.io/posts/c1a85fc8.html</id>
    <published>2024-07-12T10:58:17.000Z</published>
    <updated>2024-07-12T11:07:02.701Z</updated>
    
    <content type="html"><![CDATA[<p>  年少轻狂的那些岁月，沉淀下来的是那些再也回不到的过去，而总让人感叹的，则是未曾珍惜而失去的那些，因为年少轻狂的岁月一生也只有一次，世间最珍贵的不是得不到和已失去的，而是现在把握的。我们生活在一个复杂而又充满无奈的世界，身上背负了太多太多的责任和使命，有时候我们处理不当就会不堪重负难以忍受，最宽阔的是海洋，比海洋更宽阔的是天空，比天空更宽阔的是人的胸怀。当你紧握双手里面什么也没有，当你打开双手，世界就在你手中。</p><p><img src="https://13792cd5.telegraph-image-eur.pages.dev/file/0178db9210b36dfe6a89c.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  年少轻狂的那些岁月，沉淀下来的是那些再也回不到的过去，而总让人感叹的，则是未曾珍惜而失去的那些，因为年少轻狂的岁月一生也只有一次，世间最珍贵的不是得不到和已失去的，而是现在把握的。我们生活在一个复杂而又充满无奈的世界，身上背负了太多太多的责任和使命，有时候我们处理不当就</summary>
      
    
    
    
    
    <category term="语录" scheme="https://zggnice.github.io/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>强风吹拂</title>
    <link href="https://zggnice.github.io/posts/8c83a0fc.html"/>
    <id>https://zggnice.github.io/posts/8c83a0fc.html</id>
    <published>2024-07-01T00:42:23.000Z</published>
    <updated>2024-07-01T00:47:15.627Z</updated>
    
    <content type="html"><![CDATA[<p>长跑的目标不是更快，而是更强。<br>“明明这么痛苦，这么难过，为什么就是不能放弃跑步？<br>因为全身细胞都在蠢蠢欲动，想要感受强风迎面吹拂的滋味。”</p><p><img src="https://13792cd5.telegraph-image-eur.pages.dev/file/91d20cca30012d576b8e9.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;长跑的目标不是更快，而是更强。&lt;br&gt;“明明这么痛苦，这么难过，为什么就是不能放弃跑步？&lt;br&gt;因为全身细胞都在蠢蠢欲动，想要感受强风迎面吹拂的滋味。”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://13792cd5.telegraph-image-eur.pages.</summary>
      
    
    
    
    
    <category term="运动坚持" scheme="https://zggnice.github.io/tags/%E8%BF%90%E5%8A%A8%E5%9D%9A%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>驼峰命名</title>
    <link href="https://zggnice.github.io/posts/b0283f36.html"/>
    <id>https://zggnice.github.io/posts/b0283f36.html</id>
    <published>2024-06-29T14:06:40.000Z</published>
    <updated>2024-06-29T14:16:53.804Z</updated>
    
    <content type="html"><![CDATA[<p>标识符命名规则（见名知意）<br>①小驼峰命名法：方法、变量<br>规范1：标识符是一个单词的时候，全部小写<br>范例1:name<br>规范2：由多个单词组成的时候，第一个单词首字母小写，其他单词首字母大写<br>范例2:first Name<br>②大驼峰命名法：类名<br>规范：标识符是个单词的时候，首字母大写<br>范例1:Student<br>规范2：标识符由多个单词组成的时候，每个单词的首字母大写。<br>范例2:GoodStudent</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;标识符命名规则（见名知意）&lt;br&gt;①小驼峰命名法：方法、变量&lt;br&gt;规范1：标识符是一个单词的时候，全部小写&lt;br&gt;范例1:name&lt;br&gt;规范2：由多个单词组成的时候，第一个单词首字母小写，其他单词首字母大写&lt;br&gt;范例2:first Name&lt;br&gt;②大驼峰命名法：类名</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>原神语录</title>
    <link href="https://zggnice.github.io/posts/749f82c4.html"/>
    <id>https://zggnice.github.io/posts/749f82c4.html</id>
    <published>2024-06-17T07:02:09.000Z</published>
    <updated>2024-06-17T07:24:12.653Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img.picui.cn/free/2024/06/17/666fe3e00d535.jpg"></p><p>1．若你困于无风之地，我将奏响高天之歌。2．最初的鸟儿是不会飞翔的，飞翔是它们勇于跌落山谷的奖励。<br>3．正是因为无法更改，无法违逆，只能接受，命运才被称之为命运。<br>4．曲高未必人不识，自有知音和清词。5．世上没有什么巧合，一切都是在永远的过去埋下种子。<br>6．即使只是片刻的火花，也能在仰望黑夜的人心中，留下久久不灭的美丽光芒。7．烟花易逝，人情长存。<br>8．这世界上没有纯粹的自由，风也会有吹到尽头的时候。<br>9．天高散孤云，落日澄空故乡影，飘摇游子心。<br>10．只要坚信自己的道路，就无所谓天气是晴是雨。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img.picui.cn/free/2024/06/17/666fe3e00d535.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;1．若你困于无风之地，我将奏响高天之歌。2．最初的鸟儿是不会飞翔的，飞翔是它们勇于跌落山谷的奖励。&lt;br&gt;3．正是因为无法更改</summary>
      
    
    
    
    
    <category term="双子" scheme="https://zggnice.github.io/tags/%E5%8F%8C%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>语录</title>
    <link href="https://zggnice.github.io/posts/undefined.html"/>
    <id>https://zggnice.github.io/posts/undefined.html</id>
    <published>2024-06-17T02:39:46.000Z</published>
    <updated>2024-06-17T07:24:07.003Z</updated>
    
    <content type="html"><![CDATA[<p>孤独和累是登顶前的常态，不要放弃。<br>人生是旷野，不是所有的游荡都意味着迷失。</p><p><img src="https://img.picui.cn/free/2024/06/16/666e90fe14c53.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;孤独和累是登顶前的常态，不要放弃。&lt;br&gt;人生是旷野，不是所有的游荡都意味着迷失。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.picui.cn/free/2024/06/16/666e90fe14c53.jpg&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="努力加油！" scheme="https://zggnice.github.io/tags/%E5%8A%AA%E5%8A%9B%E5%8A%A0%E6%B2%B9%EF%BC%81/"/>
    
  </entry>
  
  <entry>
    <title>天罡赋</title>
    <link href="https://zggnice.github.io/posts/3874b773.html"/>
    <id>https://zggnice.github.io/posts/3874b773.html</id>
    <published>2024-06-16T11:02:19.000Z</published>
    <updated>2024-06-16T11:30:12.529Z</updated>
    
    <content type="html"><![CDATA[<p>   世间万物，风云变幻，苍黄翻覆。纵使波谲云诡，但制心一处，便无事不办。天定胜人，人定兮胜天。<br>    天下尽做饵，唯本帅执竿。三百年光阴，京师长安到东都洛阳兴亡起伏，从鼓动杨广大兴师旅到造就贞观之治，渭水之盟到大败突厥、废王立武到二圣临朝，谋天宝之乱到纵黄巢造反警示昭宗。臣无不是为大唐，这其中多少苦心，多少苦难，本帅始终不曾停下脚步，却因为你，踌躇了数十年!</p><p><img src="https://img.picui.cn/free/2024/06/16/666ecc844904e.jpg" alt=" 背景图片"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;   世间万物，风云变幻，苍黄翻覆。纵使波谲云诡，但制心一处，便无事不办。天定胜人，人定兮胜天。&lt;br&gt;    天下尽做饵，唯本帅执竿。三百年光阴，京师长安到东都洛阳兴亡起伏，从鼓动杨广大兴师旅到造就贞观之治，渭水之盟到大败突厥、废王立武到二圣临朝，谋天宝之乱到纵黄巢造反警</summary>
      
    
    
    
    
  </entry>
  
</feed>
